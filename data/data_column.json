{
    "Name":["Craigslist","Instagram","Twitter","NY Times","Hip Chat","ESPN","SalesForce","Yelp","Etsy","Facebook","SoundCloud","Google","NetFlix","StackExchange/Overflow","AirBnB","Tumblr","Pinterest","Yahoo","Khan Academy","DuckDuckGo","TripAdvisor","YouPorn","YouTube","LinkedIn","New Relic","EverNote","Disqus","Reddit","eBay","MetLife","Stripe","ServerDensity","FourSquare","Flickr","BaseCamp","Digg","K12","Heroku","Groupon","Intuit TurboTax","rocket.im"],
    "Team":["","5","Platform team - 5-7, sit together, dedicated, can publically accept trust, autonomous. Failure is an option.","","18","24","","","From Flickr","","","","","45","","20","40","","5","Asana (pm), Hipchat, Yammer10-15 FT, 20-25 contrib, 50% FT remote","Dev works across entire stack. simple and deploy often. Release process is shared + rotated among various senior Eng and EM.\ntesting -Unit, Functional, Load, Smoke, Selenium, Load, and a test lab. reviews: Design Review, Code Review, Deployment Review, Operational Review","","","","30 for 10k customers.","","","","","","","","","","","","","","","",""],
    "Wisdom":["","Simplicity. Do'nt re-invent. SSL only at LB","Test before you start, Tests will save your life. Denormalize a lot. Use messages to invalidate Cache. Cache everything. Build in limits. Partition day 1. Avoid complex joins and scans. SOA = seperate concerns but will introduce cross dependencies.","","EBS 1TB data max. Couch uses 2x disk space during compaction. Riak search not baked, prefer ElasticSearch.","Cache at page and fragment level. Multi-cache system. avoid TTL expiration.","Multi-tenancy, Stateless, DB is System of Record, No DDL","if doing something clever, its wrong.","QA is done by developers. Ea. Dev on support call 1wk/yr. Always 1Ops/1Dev on call. 1d/wk for schema change. Let Dev code SQL avoid DBA dependency.","PODs of DB, Webapps","","","Unit Test everything","Run in RAM.","","Light Scrum, Automate everything. MySQL/Sharding scales - apps dont, Select a stack that will help you hire the people you need. Read.","Shard if project will have few TB","","","","","","","","Trendy != Reliable.","","","Seperation of services, open schema, STATELESS, Memcache everything (store more data now in Memcachedb than Postgres)","","","","","Cache and LB across a cluster. Design scalable upfront., Release early and often","","","","","","","",""],
    "Notes":["2.5+ B archived postings. MongoDB has 3 shards across 3 node replicasets. 6TB of data. Search has 300+M daily queries.","100+ EC2 servers. 25+ Django servers. 12+12 DB servers.6 memcached servers. 200 python queue workers.","300 tweets/s . 3 queues to LB requests. 600 req/s, 200300 connections per second, MySQL handles 2400 requests/s, 180 rails instances, 1 big MySQL server, 30+ jobs processes, Rails SLA 200 ms, Avg DB time 50-100ms, 16gb of memcached. 90% requests are API.","200ms request SLA. Ea python websocket gateway supports 100k clients. 12 nodes Cassandra cluster across 2 regions. Cassandra for persistence and cache","60 msg/s, 1.2B documents, 4TB EBS Raid, 26 frontend proxies, 52 backend app servers. 0.5TB search data. 75 AWS EC2 instances. 6 XMPP servers. Redis clustering pain.1B messages, 200gb RAM. AWS on 4 zones. 22gb of heap on 8 boxes for Java.","#10 of all sites.100k req/s. Sports data XGb. 100s of logical DBs,150 apps on 100 servers. 100s of JVM per server.","1.3B daily transactions, 15k hw systems, 14GB heap per JVM. 8 node DB cluster. CUstomer sandbox have 4 node cluster. ACS curcor cache on dedicated 2 servers.","102m monthly uniq visitors.","2B page views/mo","","","TBs of data on 1000 machines","33% of al US internet traffic, 10s of 1000s of instances","10 servers in NY, 9 production servers.Overflow has more SSD and RAM for Lucene. Failover is read only. 60% peak for webservers not acceptable. SQL server - 13TB Ram, 20gb a day goes into SQL server. Create 1 table a day for stats.","","40k req/s, 1TB into Hadoop, 500m page views. 500 web servers with Apache and Php, 200 DB servers, 47 pools, 30 shards, 30 memcached servers, 22 redis servers w/8-32 instances each, 15 varnish servers, 25 HAProxy nodes, 8 NGinx, 14 queue servers","180 web engines, 240 API engines, 88 MySQL DB(cc2.8xlarge) +1 slave, 110 Redis, 200 memcached instances, 4 Redis Task Managers, 80 Task processors, Shareded Solr","","6mil users a month","30m searches in 2/12. 12m API requests a day., 1m searches a day. Each dev gets medium instance. Use m2.xlarge for caching, 100gb shared across multiple instances. No master cache, relicated on all.","80 front ends, 52 back ends - each with 24 cores. 12 moderate servers for memcached","","","","","","17,000 req/s, 100 servers, 30% web. 10% DB, 25% cache, 20% LB, 15% utility","","","","","","","","30 servers, 8CPU ea, = 100 CPU 200gb of Ram","","65,000/req/min - for main server, 3m visits per day, 400000 unique visitors a day","","","",""],
    "PM":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],
    "OS":["","Ubuntu","","","Ubuntu","","Linux","","CentOS","","","Linux","","Linux","","Linux","","","","Ubuntu","","","","","Linux","Debian","","","","","","","","","Linux","","Linux","","","",""],
    "DevOps":["Perl","Fabric, Vmtouch, Munin, StatsD,Pingdom, PagerDuty, Sentry, pgfouine, DogSlow","VIZ, Zipkin, Yourkit, JConsole, track realtime statistics, AWStats, Google Analytics","","Chef, Fabric, Capistrano, Bamboo, Sensu, Monit, PergerDuty, statsD, Graphite graphing.","","Puppet, Razor, Nagios, Perforce, Git, svn","","Chef, statsD (authored)","","","","vmstat, dstat, mpstat, top, atop, htop, nmon, iostat, sar, uptime, free, pidstat, ps, pstree, netstat, iptraf, ping, nicstat, ifconfig, pmap, pstack, jstack, iotop, tcpdump, wireshark, strace. Test Branch ()dev features, Release Branch (weekly release), Prod Branch (merge from Release, for daily patches), gcviz (author), Jenkins, Maven","Dashboard - 3 graphs: CPI, memory, network. Orion monitor. Google Anaytics. Nagios. Splunk for logs. Bind for DNS, Pingdom.","","Git, Capistrano, Puppet, jenkins, preconfigued Dev machines updated via puppet. Vim and Textmate, Code Reviews","","","","Perl, ServerDensity (monitoring), daemontools, git","cacti, nagios, custom, php, ruby, python, perl, svn","Syslogn","","svn, Hudson, ship code twice a week, ones every 2 wks for major features.","","Zabbix, Opsview, AlertSite, Puppet, http://graphite.wikidot.com/, collectD","Python, Hudson","","","","","","","","","","Jenkins, VMWare","","","",""],
    "Infrastructure":["Self-hosted, Blades and multi-U multi-disk RAID boxes. Mostly local storage. All open source tools.","AWS, ELB, Route53","","AWS (Oregon, Dublin) Amazon Linux AMI. c1-m for retail,  MQ on c1-xl","AWS","F5 LB, Disney datacenter","","AWS","","","","","AWS","Peer1. Don't trust AWS. 3x more expensive. Expect 5 yrs from each computer. AWS has random network latency issues.","","","AWS, Akamai, Level3","","Google Apps (more automatic scalaingvs AWS, nneds manual effort)","AWS, Global Traffic Director for LB. Dont trust EBS","AWS, ELB (See cost analysis in link)","","","","","BGP for DNS, Vyatta LB thru Level3","","AWS","","","","","AWS","","","","","","","AWS","AWS"],
    "Storage":["XFS","XFS, S3,EBS","","","","","22PB faw SAN storage, 5KSAN ports. QFS","S3","","","","GFS","S3","","","","","","","S3, Berkley DB","","","","","","","","","","","","","Isilon Cluster","","S3","","NAS","","","","S3"],
    "CDN":["","CloudFront","","","","","","","","","","","","CDN helps 80% of the way with international customers.","","","CloudFront","","","","","","","","","","","","","","","","","","","","","","","CloudFront",""],
    "Servers":["Apache, mod_perl, HAProxy (between DB clients and servers)","Gunicorn, NGinx, HAProxy","","","","","Jetty","","","","","","","HAProxy, Bacula","","HAProxy (front end), NGinx","NGinx","","","NGinx, FastCGI","NGinx, Tomcat","NGinx (web server), HAProxy for LB, Varnish (rev Proxy)","","","NGinx, Jetty","Tomcat","Apache + mod_wsgi, HAProxy","","","","","","Tomcat","","HAProxy, Apache, Mongrel","","Tomcat, Apache","","","Apache, Coyote","NGinx"],
    "FETechnology":["","Python","Ruby (api, web, monorail - was single stack - bad i/o, too many dev, brittle)","Python, Php","Php","Java","Python","","Php (was Python)","Php","","Python","Java","C#","","Php, Ruby","","","Php","Perl, Javascript, Node.js","Java","Php (was Perl)","","Ruby, Node.JS","Ruby","","Python","","Node.js","","","","","","Ruby","","Java","","","JSP","Node.js (express, faye, knox, async, underscore, mongoose, redis) did not like socket.io and sockjs"],
    "FEFrameworks":["","Django","Rails","sockjs","Twisted Python XMPP","","","","","Hiphop VM","","","Bootstrap, JQueryUI, D3, DataTables, FreeMarker, Pytheas (author), Guice, Jersey","Razor, jQuery","","Moved from Handlebars and Prototype to Jquery and underscore","","","Processing.js","YUI (moving to jQuery)","Velocity","Symfony2, http://www.doctrine-project.org/ for CMS","","Backbone.js, Dust.js (was YUI), Sass, PhantomJS","Rails","GWT, prototype, JQuery","Django","","","","","","","","Rails (author)","","Struts, Seam, SpringMVC","","","Angular, JSquery, Modernizer, SCSS","Backbone, requireJS, jQuery"],
    "FECaching":["Memcached (primary for rendered pages, serliazed objects)","Memcached","Memcached, Varnish","Cassandra","Redis","Ehcache (replicated per app server, DB trigger, changes pushed), Oracle eXtreme Scale","Memcached","","","","","","Memcached, EVCache (author)","Redis","","Varnish (blogs), Memcached (moving to redis)","Memcached (mature, simple, nver crashes)","","","Memcached. Cache rate is 50%","Memcached","","","","","EHCache","memcached","memcached","","","","","","","memcached","","","","","",""],
    "BETechnology":["perl+epoll","","Scala (Tweet, User, Timeline, Graph, DMS services)","Python, Java","","Java","Python, Perl","","Php (was Python)","Java","","Java, C++","Clojure, Java, Python","","","Scala (was Php), some Clojure","","","Python","","","","","Java, Scala","Java (was Ruby, not performant)","Java","","","","","","","Java, Scala","","","","Java","","","","App/pubsub/worker/upload worker/mission control"],
    "BEFrameworks":["Perl","","Finagle (author), Zookeeper, Thrift (author)","","","Hibernate, EJB","","","","Thrift","","","Thrift, Zuul","","","Finagle, Thrift, Func (author), Zookeeper","","","","","","","","Spring","","Hibernate, EJB3, Thrift","","","","","","","Finagle, Zookeeper, Thrift","","","","SpringMVC, Hibernate, myBatis","","","",""],
    "BECaching":["Redis (remote replication, 80% in sorted sets, shared multi-node cluster)","Redis","Redis, T-Bird, Flock","","CouchDB (Chat history, moving to ElasticSearch)","Hibernate caching, JPA Query replicator.","","","","","","","Cassandra (was simpleDB) for User Video Queue","Redis as shared state cache between 10 servers.","","Redis (also for queues)","Redis (not mature, but goodm variety of data structures, persistence and replication) ","","","Bucardo (pgSQL replication)","","Redis","","","","","","Cassandra (votes)","","","","","Oracle MemoryGrid","","","","","","","","Redis"],
    "DB":["MySQL (live postings), MongoDB (archived postings, built in sharding support and good replica sets, also has good Perl support)","PostgreSQL","MySQL","Cassandra","MySQL (MariaDB for on premise)","Oracle, MS SQL","Oracle RAC","","MySQL (was PostgreSQL)","MySQL","","","MySQL","MS SQL Server. 40% read, 60% write.","","MySQL (NOT replacing with HBase, Feel it can scale just as well as MongoDB)","MySQL (very mature, never crashed for them)","","","PostgreSQL","","MySQL (feeds Redis)","","MySQL, Voldemort (Like DynamoDB), Expresso","MySQL (Percona build)","MySQL","PostgreSQL","PostgreSQL (most data)","MongoDB","MongoDB","MongoDB","MongoDB","MongoDB","","MySQL","","Oracle","","","","MongoDB"],
    "DBNotes":["InnoDB compression used almost everywhere","Sharing by User ID, Pgbouncer","","","","","OrgID partition, Creative Denormaization.","Shard based on account ID","","Zookeeper","","","","","","","XtraBackup, Innotop, Maatkit, Percona supported   CLUSTERING - Membase and Cassandra (clustering, automatic, no single point of failure, load balancing but not matrure, hard to find engineers, scary upgrades, complex) SHARDING - manual distribution, can split DB for capacity, high availability, load balancing, simpler. ","","","","","","","","","","","","","","","","","","","","","","","",""],
    "Queues":["Redis","","Kestrel, drb/Jabber, Rinda","RabbitMQ, Fabrik","German (queue), Curler (worker), Evaluating RabbitMQ","Oracle AQ, WebphereMQ, JMS","Qpid","","","","","","Kafka, Suro","","","Kafka, Gearman, Kestrel","Redis","","","","","ActiveMQ","","Kafka (author)","","","","","","","","","","","","","JMS","","","",""],
    "Search":["Sphinx","Solr","","","Lucene (was), ElasticSearch","","Solr with 640GB Flash mem","","","","","","ElasticSearch","Lucene","","","Solr (Doesnt scale past one box, easy to setup, now using http://websolr.com ) ElasticSearch gave trouble with small documents and lots of queries","","","Solr, Perl","Lucene","","","","","Lucene","","","","","","","","","","","","","","",""],
    "Graph":["","Redis","Flock, Redis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],
    "Analytics":["","","Storm (Author)","","","","","AWS Elastic MapReduce, Hadoop","","Hadoop, HBase (Rejected Cassandra), Scribe for logs, Ptail reads data in.","","MapReduce, BigTable","Pig, Hive, Hadoop, Storm","","","HBase","HBase","","","","Hadoop","","","hadoop","","","","","","","","","","","","","Oracle BI","","Storm","",""],
    "Reference":["http://www.slideshare.net/jzawodn/living-with-sql-and-nosql-at-craigslist-a-pragmatic-approach http://blog.zawodny.com/2011/02/26/redis-sharding-at-craigslist/ http://www.mongodb.com/presentations/lessons-learned-migrating-2-billion-documents-craigslist","http://highscalability.com/blog/2012/4/9/the-instagram-architecture-facebook-bought-for-a-cool-billio.html","http://www.artima.com/scalazine/articles/twitter_on_scala.html http://gojko.net/2009/03/16/qcon-london-2009-upgrading-twitter-without-service-disruptions/ http://www.slideshare.net/Blaine/scaling-twitter http://www.infoq.com/presentations/twitter-scalability-culture","http://highscalability.com/blog/2014/1/13/nytimes-architecture-no-head-no-master-no-single-point-of-fa.html","http://highscalability.com/blog/2014/1/6/how-hipchat-stores-and-indexes-billions-of-messages-using-el.html","http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html","http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html http://www.infoq.com/presentations/SalesForce-Multi-Tenant-Architecture-Craig-Weissman","http://highscalability.com/blog/2012/1/9/the-etsy-saga-from-silos-to-happy-to-billions-of-pageviews-a.html","http://highscalability.com/blog/2012/1/9/the-etsy-saga-from-silos-to-happy-to-billions-of-pageviews-a.html","http://highscalability.com/blog/2011/5/17/facebook-an-example-canonical-architecture-for-scaling-billi.html","","","http://techblog.netflix.com/ http://www.slideshare.net/RuslanMeshenberg/svc-202netflixopensource http://www.slideshare.net/RuslanMeshenberg/arc305-how-netflix-leverages-multiple-regions-to-increase-availability-an-isthmus-and-activeactive-case-study http://techblog.netflix.com/2013/12/announcing-suro-backbone-of-netflixs.html http://techblog.netflix.com/2013/08/deploying-netflix-api.html http://techblog.netflix.com/2013/05/garbage-collection-visualization.html","http://blog.serverfault.com/ http://highscalability.com/blog/2011/10/24/stackexchange-architecture-updates-running-smoothly-amazon-4.html http://highscalability.com/blog/2011/3/3/stack-overflow-architecture-update-now-at-95-million-page-vi.html","","http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html http://engineering.tumblr.com/","http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html  http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html","","http://highscalability.com/blog/2013/4/1/khan-academy-checkbook-scaling-to-6-million-users-a-month-on.html","https://duck.co/help/company/architecture http://highscalability.com/blog/2013/1/28/duckduckgo-architecture-1-million-deep-searches-a-day-and-gr.html","http://highscalability.com/blog/2012/10/2/an-epic-tripadvisor-update-why-not-run-on-the-cloud-the-gran.html","","","http://engineering.linkedin.com/technology","http://highscalability.com/blog/2011/7/18/new-relic-architecture-collecting-20-billion-metrics-a-day.html","http://blog.evernote.com/tech/2011/05/17/architectural-digest/ http://blog.evernote.com/tech/page/2/","http://highscalability.com/blog/2010/10/26/scaling-disqus-to-75-million-comments-and-17000-rps.html  http://www.slideshare.net/zeeg/djangocon-2010-scaling-disqus","http://highscalability.com/blog/2010/5/17/7-lessons-learned-while-building-reddit-to-270-million-page.html  http://www.reddit.com/#Whattechnologydoesreddituse","http://www.technology-ebay.de/the-teams/mobile-de/blog/mapping-bigdecimals-with-morphia-for-mongodb.html http://www.ebaytechblog.com/2013/05/17/how-we-built-ebays-first-node-js-application/ http://www.mongodb.com/presentations/storing-ebays-media-metadata-mongodb-0 http://www.mongodb.com/presentations/mongodb-ebay","http://www.mongodb.org/about/production-deployments/","http://www.mongodb.org/about/production-deployments/","http://www.mongodb.org/about/production-deployments/","http://highscalability.com/blog/2010/10/15/troubles-with-sharding-what-can-we-learn-from-the-foursquare.html http://nosql.mypopescu.com/post/1265191137/foursquare-mongodb-outage-post-mortem","http://highscalability.com/flickr-architecture","","http://highscalability.com/blog/2009/4/4/digg-architecture.html","","","","",""]
}
